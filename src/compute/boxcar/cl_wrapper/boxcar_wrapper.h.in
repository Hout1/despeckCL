/* Copyright 2015, 2016 Gerald Baier
 *
 * This file is part of despeckCL.
 *
 * despeckCL is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * despeckCL is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with despeckCL. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef BOXCAR_CL_WRAPPERS_H
#define BOXCAR_CL_WRAPPERS_H

#include <CL/cl.h>

#include "clcfg.h"

namespace boxcar {
    struct kernel_params {
        const int window_width;
        const int block_size = 16;
    };

    struct cl_wrappers : public kernel_env_single<boxcar::cl_wrappers>
    {
        public:
            const int window_width;
            const int output_block_size;

            static constexpr const char* routine_name {"boxcar_kernel"};
            static constexpr const char* kernel_source {"@CMAKE_KERNEL_SOURCE@"};

            cl_wrappers(cl::Context context,
                        kernel_params kp);

            cl_wrappers(const cl_wrappers& precompiled);

            std::string build_opts();

            void run(cl::CommandQueue cmd_queue,
                     cl::Buffer ampl_master,
                     cl::Buffer ampl_slave,
                     cl::Buffer phase,
                     cl::Buffer ref_filt,
                     cl::Buffer phase_filt,
                     cl::Buffer coh_filt,
                     const int height,
                     const int width);
    };

    cl_wrappers get_cl_wrappers(cl::Context cl_context, kernel_params pm);
}
#endif
